"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[8376],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>y});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,y=c["".concat(s,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(y,l(l({ref:t},m),{},{components:n})):a.createElement(y,l({ref:t},m))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(8168),r=(n(6540),n(5680));const i={tags:["sql","sqlite","database"],sidebar_class_name:"hidden"},l="SQLite",o={unversionedId:"knowtes/sqlite",id:"knowtes/sqlite",title:"SQLite",description:"- .schema  - describe table schema",source:"@site/docs/knowtes/sqlite.md",sourceDirName:"knowtes",slug:"/knowtes/sqlite",permalink:"/docs/knowtes/sqlite",draft:!1,tags:[{label:"sql",permalink:"/docs/tags/sql"},{label:"sqlite",permalink:"/docs/tags/sqlite"},{label:"database",permalink:"/docs/tags/database"}],version:"current",frontMatter:{tags:["sql","sqlite","database"],sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"SQLAlchemy",permalink:"/docs/knowtes/sqlalchemy"},next:{title:"SQL Server",permalink:"/docs/knowtes/sqlserver"}},s={},p=[{value:"Using Views",id:"using-views",level:2},{value:"Common Table Expression",id:"common-table-expression",level:2},{value:"Using CTE as variable",id:"using-cte-as-variable",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(c,(0,a.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"sqlite"},"SQLite"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},".schema <tablename>")," - describe table schema"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},".tables")," - enumerate existing tables and views"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},".save <filename>")," - save in-memory database into specified file"),(0,r.yg)("li",{parentName:"ul"},"To import a file into a database, specify mode of source file first, then import. ",(0,r.yg)("inlineCode",{parentName:"li"},".mode csv")," or ",(0,r.yg)("inlineCode",{parentName:"li"},".mode tabs")," then\n",(0,r.yg)("inlineCode",{parentName:"li"},".import <filename> <tablename>")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},".header on")," - to toggle display of column names"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},".quit")," - to exit sqlite"),(0,r.yg)("li",{parentName:"ul"},"Create index to make queries faster, do: ",(0,r.yg)("inlineCode",{parentName:"li"},"CREATE INDEX <indexname> ON <tablename>(<columnname>)"),";")),(0,r.yg)("h2",{id:"using-views"},"Using Views"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Create view:")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"}," CREATE VIEW <view_name>\n AS\n    <select_statement>\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"To call: ",(0,r.yg)("inlineCode",{parentName:"li"},"SELECT * FROM <view_name>")),(0,r.yg)("li",{parentName:"ul"},"To list all available views in sqlite: ",(0,r.yg)("inlineCode",{parentName:"li"},"SELECT name FROM sqlite_master WHERE type='view';"))),(0,r.yg)("h2",{id:"common-table-expression"},"Common Table Expression"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"basically a subquery with an assigned name and defined prior to the query in which it is referenced."),(0,r.yg)("li",{parentName:"ul"},"Examples:",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre"},"WITH one as (SELECT 1)\nSELECT * FROM one;\n")))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"WITH aCTE AS (SELECT 'a'), \n     bCTE AS (SELECT 'b')\nSELECT * FROM aCTE, bCTE;\n")),(0,r.yg)("h2",{id:"using-cte-as-variable"},"Using CTE as variable"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"WITH temptabl AS (select '2021-01-01' as mydate)\nSELECT * from price_view, temptabl WHERE price_view.CurrentCostDate >= temptabl.mydate;\n")))}u.isMDXComponent=!0}}]);