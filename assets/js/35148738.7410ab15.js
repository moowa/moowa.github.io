"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[7386],{1177:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"knowtes/github_actions","title":"GitHub Actions","description":"GitHub Actions is a platform that allows you to create continuous integration and continuous delivery (CI/CD) pipelines to automate your build and deployment workflows.","source":"@site/docs/knowtes/github_actions.md","sourceDirName":"knowtes","slug":"/knowtes/github_actions","permalink":"/docs/knowtes/github_actions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"developer tools","permalink":"/docs/tags/developer-tools"},{"inline":true,"label":"github actions","permalink":"/docs/tags/github-actions"},{"inline":true,"label":"ci/cd","permalink":"/docs/tags/ci-cd"}],"version":"current","frontMatter":{"tags":["developer tools","github actions","ci/cd"],"sidebar_class_name":"hidden"},"sidebar":"tutorialSidebar","previous":{"title":"Git","permalink":"/docs/knowtes/git"},"next":{"title":"Python http server","permalink":"/docs/knowtes/http_server"}}');var n=i(4848),o=i(8453);const r={tags:["developer tools","github actions","ci/cd"],sidebar_class_name:"hidden"},c="GitHub Actions",a={},l=[{value:"Example Use Case: Deploying Docusaurus",id:"example-use-case-deploying-docusaurus",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"github-actions",children:"GitHub Actions"})}),"\n",(0,n.jsx)(t.p,{children:"GitHub Actions is a platform that allows you to create continuous integration and continuous delivery (CI/CD) pipelines to automate your build and deployment workflows."}),"\n",(0,n.jsxs)(t.p,{children:["Refer to ",(0,n.jsx)(t.a,{href:"https://docs.github.com/en/actions/quickstart",children:"Quickstart"}),"\u2197\ufe0f for a brief example of a workflow."]}),"\n",(0,n.jsx)(t.p,{children:"Components:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Workflow - defines the automated process that will run one or more tasks when an event is triggered. It is configured with YAML file/s in the ",(0,n.jsx)(t.code,{children:".github/workflows"})," directory in a repository."]}),"\n",(0,n.jsx)(t.li,{children:"Event - when this activity occurs in a repository, it triggers the corresponding workflow to run. An event could be a pushed commit, scheduled at specific periods or triggered manually."}),"\n",(0,n.jsx)(t.li,{children:"Job - a set of steps defined in a workflow that is performed by the same runner. A step could be a shell script or an action that can be run."}),"\n",(0,n.jsx)(t.li,{children:"Action - frequently repeated task, may be custom made or reused from marketplace."}),"\n",(0,n.jsx)(t.li,{children:"Runner - server that runs a workflow when it is triggred by an event."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"example-use-case-deploying-docusaurus",children:"Example Use Case: Deploying Docusaurus"}),"\n",(0,n.jsx)(t.p,{children:"Code for Docusaurus may be kept in a private repository (source), while the static build to be deployed in GitHub Pages can be in a separate public repository (destination/external). We will use GitHub Actions for seamless build whenever we push our code to the private repository."}),"\n",(0,n.jsx)(t.p,{children:"Specifically, we will configure our GitHub Actions workflow to:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"Checkout the code from the source repo."}),"\n",(0,n.jsx)(t.li,{children:"Set up node, install dependencies and build the static Docusaurus site."}),"\n",(0,n.jsx)(t.li,{children:"Publish the static code to an external public github.io repository."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"This workflow is triggered whenever code is pushed in the private repo."}),"\n",(0,n.jsx)(t.p,{children:"Steps:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Create YAML workflow file in the directory ",(0,n.jsx)(t.code,{children:".github/workflows"})," in the source repository (private)."]}),"\n",(0,n.jsxs)(t.li,{children:["Use action ",(0,n.jsx)(t.code,{children:"peaceiris/actions-gh-pages@v3"})," to deploy static pages. Set external repository as ",(0,n.jsx)(t.code,{children:"<username>/<username>.github.io"}),". ",(0,n.jsx)(t.code,{children:"publish_dir"})," is where the static pages are typically written in the source repository (usually ",(0,n.jsx)(t.code,{children:"./build"})," for docusaurus). ",(0,n.jsx)(t.code,{children:"publish_branch"})," is the branch in the destination repository (",(0,n.jsx)(t.code,{children:"main"}),") where the static pages will be copied."]}),"\n",(0,n.jsxs)(t.li,{children:["Set up public and private keys using ",(0,n.jsx)(t.code,{children:'ssh-keygen -t rsa -b 4096 -C "$(git config user.email)" -f gh-pages -N ""'}),"\nThis will generate two files: ",(0,n.jsx)(t.code,{children:"gh-pages.pub"})," is the public key that you need to configure in the destination public repo's deploy keys (allow write access), and ",(0,n.jsx)(t.code,{children:"gh-pages"})," is the private key that you need to configure in the source repo's secrets. Refer to ",(0,n.jsx)(t.a,{href:"https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-create-ssh-deploy-key",children:"peaceiris"}),"\u2197\ufe0f for sample screenshots.\nTip \ud83d\udca1: Use VSCode to view/copy the keys."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Reference:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://medium.com/@nathvichea/github-action-to-deploy-docusaurus-8c297eaf1514",children:"GitHub Action to Deploy Docusaurus"}),"\u2197\ufe0f"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/peaceiris/actions-gh-pages",children:"peaceiris GitHub Actions for GitHub Pages"}),"\u2197\ufe0f"]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var s=i(6540);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);