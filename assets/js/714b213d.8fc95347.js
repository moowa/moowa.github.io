"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[7150],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=p(a),u=i,f=s["".concat(c,".").concat(u)]||s[u]||m[u]||r;return a?n.createElement(f,l(l({ref:t},d),{},{components:a})):n.createElement(f,l({ref:t},d))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[s]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},586:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));const r={tags:["python","alembic","database management"],sidebar_class_name:"hidden"},l="Alembic",o={unversionedId:"knowtes/alembic",id:"knowtes/alembic",title:"Alembic",description:"How to use",source:"@site/docs/knowtes/alembic.md",sourceDirName:"knowtes",slug:"/knowtes/alembic",permalink:"/docs/knowtes/alembic",draft:!1,tags:[{label:"python",permalink:"/docs/tags/python"},{label:"alembic",permalink:"/docs/tags/alembic"},{label:"database management",permalink:"/docs/tags/database-management"}],version:"current",frontMatter:{tags:["python","alembic","database management"],sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"Apache Airflow",permalink:"/docs/knowtes/airflow"},next:{title:"Conda",permalink:"/docs/knowtes/conda"}},c={},p=[{value:"How to use",id:"how-to-use",level:2},{value:"Modifying table with no data yet",id:"modifying-table-with-no-data-yet",level:2},{value:"Modifying table with data (Ex. production)",id:"modifying-table-with-data-ex-production",level:2},{value:"Counterpart in Flask",id:"counterpart-in-flask",level:2}],d={toc:p},s="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(s,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"alembic"},"Alembic"),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify models.py"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'alembic revision --autogenerate -m "<short description>"')),(0,i.kt)("li",{parentName:"ul"},"To use specific ini/config file: ",(0,i.kt)("inlineCode",{parentName:"li"},'alembic -c <ini file> revision --autogenerate -m "<short description"'),"\nExample: ",(0,i.kt)("inlineCode",{parentName:"li"},'alembic -c alembic_local.ini revision --autogenerate -m "sccp ecs mapping"')),(0,i.kt)("li",{parentName:"ul"},"Check migrations/versions/",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Need to use batch","_","op for altering/updating tables, both for upgrade and downgrade"),(0,i.kt)("li",{parentName:"ul"},"No need when initially creating a table"))),(0,i.kt)("li",{parentName:"ul"},"Do ",(0,i.kt)("inlineCode",{parentName:"li"},"alembic upgrade head")," to apply the changes specified in the migrations file to the database"),(0,i.kt)("li",{parentName:"ul"},"If you used a specific ini/config file when autogenerating the revision, you also need to specify the config when upgrading the head: ",(0,i.kt)("inlineCode",{parentName:"li"},"alembic -c alembic_local.ini upgrade head"))),(0,i.kt)("h2",{id:"modifying-table-with-no-data-yet"},"Modifying table with no data yet"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify models.py"),(0,i.kt)("li",{parentName:"ul"},"Downgrade: ",(0,i.kt)("inlineCode",{parentName:"li"},"alembic downgrade -1")),(0,i.kt)("li",{parentName:"ul"},"Delete relevant migration revision file"),(0,i.kt)("li",{parentName:"ul"},"Make new revision: ",(0,i.kt)("inlineCode",{parentName:"li"},'alembic revision --autogenerate -m "<short description>"')),(0,i.kt)("li",{parentName:"ul"},"Do the upgrade: ",(0,i.kt)("inlineCode",{parentName:"li"},"alembic upgrade head"))),(0,i.kt)("h2",{id:"modifying-table-with-data-ex-production"},"Modifying table with data (Ex. production)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify models.py"),(0,i.kt)("li",{parentName:"ul"},'Make new revision: `alembic revision --autogenerate -m "short description"'),(0,i.kt)("li",{parentName:"ul"},"Do the upgrade: ",(0,i.kt)("inlineCode",{parentName:"li"},"alembic upgrade head")," ")),(0,i.kt)("h2",{id:"counterpart-in-flask"},"Counterpart in Flask"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Modify models.py"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'flask db migrate -m "<short description>"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"flask db upgrade"))))}m.isMDXComponent=!0}}]);