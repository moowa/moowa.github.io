"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[3400],{2768:(e,t,l)=>{l.r(t),l.d(t,{default:()=>w});var a=l(1504),n=l(4971),r=l(6016),c=l(8264);const s=["zero","one","two","few","many","other"];function o(e){return s.filter((t=>e.includes(t)))}const i={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function u(){const{i18n:{currentLocale:e}}=(0,c.c)();return(0,a.useMemo)((()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),i}}),[e])}function g(){const e=u();return{selectMessage:(t,l)=>function(e,t,l){const a=e.split("|");if(1===a.length)return a[0];a.length>l.pluralForms.length&&console.error(`For locale=${l.locale}, a maximum of ${l.pluralForms.length} plural forms are expected (${l.pluralForms.join(",")}), but the message contains ${a.length}: ${e}`);const n=l.select(t),r=l.pluralForms.indexOf(n);return a[Math.min(r,a.length-1)]}(l,t,e)}}var m=l(5756),d=l(5864),p=l(4357),h=l(2616),f=l(8712);function E(e){let{doc:t}=e;return a.createElement("article",{className:"margin-vert--lg"},a.createElement(r.c,{to:t.permalink},a.createElement("h2",null,t.title)),t.description&&a.createElement("p",null,t.description))}function w(e){let{tag:t}=e;const l=function(){const{selectMessage:e}=g();return t=>e(t,(0,p.G)({id:"theme.docs.tagDocListPageTitle.nDocsTagged",description:'Pluralized label for "{count} docs tagged". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One doc tagged|{count} docs tagged"},{count:t}))}(),c=(0,p.G)({id:"theme.docs.tagDocListPageTitle",description:"The title of the page for a docs tag",message:'{nDocsTagged} with "{tagName}"'},{nDocsTagged:l(t.count),tagName:t.label});return a.createElement(m.cr,{className:(0,n.c)(d.W.wrapper.docsPages,d.W.page.docsTagDocListPage)},a.createElement(m.U7,{title:c}),a.createElement(f.c,{tag:"doc_tag_doc_list"}),a.createElement(h.c,null,a.createElement("div",{className:"container margin-vert--lg"},a.createElement("div",{className:"row"},a.createElement("main",{className:"col col--8 col--offset-2"},a.createElement("header",{className:"margin-bottom--xl"},a.createElement("h1",null,c),a.createElement(r.c,{href:t.allTagsPath},a.createElement(p.c,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page"},"View All Tags"))),a.createElement("section",{className:"margin-vert--lg"},t.items.map((e=>a.createElement(E,{key:e.id,doc:e})))))))))}}}]);