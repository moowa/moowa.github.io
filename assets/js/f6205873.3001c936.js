"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[3940],{877:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>t});const d=JSON.parse('{"id":"knowtes/pandas","title":"Pandas","description":"Reshaping Data","source":"@site/docs/knowtes/pandas.md","sourceDirName":"knowtes","slug":"/knowtes/pandas","permalink":"/docs/knowtes/pandas","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"python","permalink":"/docs/tags/python"},{"inline":true,"label":"pandas","permalink":"/docs/tags/pandas"}],"version":"current","frontMatter":{"tags":["python","pandas"],"sidebar_class_name":"hidden"},"sidebar":"tutorialSidebar","previous":{"title":"Others \ud83d\udd16","permalink":"/docs/knowtes/others"},"next":{"title":"Pathlib","permalink":"/docs/knowtes/pathlib"}}');var i=s(4848),o=s(8453);const l={tags:["python","pandas"],sidebar_class_name:"hidden"},c="Pandas",r={},t=[{value:"Reshaping Data",id:"reshaping-data",level:2},{value:"Transformations",id:"transformations",level:2},{value:"Conditional transformations",id:"conditional-transformations",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pandas",children:"Pandas"})}),"\n",(0,i.jsx)(n.h2,{id:"reshaping-data",children:"Reshaping Data"}),"\n",(0,i.jsx)(n.p,{children:"Concatenate"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df = pd.concat([df, df1, df2])"})," - add rows / stack vertically"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df = pd.concat([df, df1, df2], axis=1)"})," - add columns / place side by side"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"pandas concat",src:s(8887).A+"",width:"488",height:"278"})}),"\n",(0,i.jsx)(n.p,{children:"Dropping columns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.drop(columns=column_name)"})," - removes specific column"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'df.drop(columns=["A","B"])'})," - drops the specified column names from a list"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Dropping rows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.drop(row_label)"})," - removes specific row"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.drop([0, 1])"})," - drops multiple rows from a list"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.dropna()"})," - drops rows where at least one one element is missing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'df.dropna(axis = "columns")'})," - drops the columns where at least one element is missing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'df.dropna(subset = ["A", "B"])'})," - identifies a list of columns to be dropped when at least one element in the column is missing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'df.dropna(how="all")'})," - drops the rows where all the elements are missing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.drop_duplicates()"})," - removes duplicate rows based on all columns"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"df.drop_duplicates(keep='first')"})," - removes duplicate rows based on all columns, specifying to keep the first occurrence"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'df.drop_duplicates(subset = ["A", "B"])'})," - removes duplicates on specified columns"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"pandas concat",src:s(9810).A+"",width:"553",height:"219"})}),"\n",(0,i.jsx)(n.p,{children:"Add columns"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'cols = df1.columns\ncols = cols + ["newA", "newB"]\n\ndf2 = df1.loc[:, cols]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"transformations",children:"Transformations"}),"\n",(0,i.jsxs)(n.p,{children:["Renaming columns: ",(0,i.jsx)(n.code,{children:'df.rename(columns= {"from_name": "to_name"})'})]}),"\n",(0,i.jsx)(n.p,{children:"Group by then sum:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'groupby_cols = ["colA", "colB", "colC"]\ndf["colSum"] = df.groupby_cols["colE"].transform("sum")\ndf = df[groupby_cols + ["colSum"]].drop_duplicates()\n'})}),"\n",(0,i.jsx)(n.h2,{id:"conditional-transformations",children:"Conditional transformations"}),"\n",(0,i.jsxs)(n.p,{children:["Replace values when a condition is satisfied: ",(0,i.jsx)(n.code,{children:"df = df.where(df>0, other=0)"})]}),"\n",(0,i.jsx)(n.p,{children:"Note on numpy select vs. where:"}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"np.select()"})," when you have multiple conditions and corresponding choices. It also allows specifying a default value when the conditions are not met."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"import numpy as np\n\nconditions_list = []\nchoices_list = []\nnp.select(conditions_list, choices_list, default)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"np.where()"})," to replace values based on a single condition. Example: If the value is greater than 20, return 1, otherwise return 0\n",(0,i.jsx)(n.code,{children:"result = np.where(arr > 20, 1, 0)"})]}),"\n",(0,i.jsx)(n.p,{children:"Replace specified columns containing null values with 0:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'fill_cols = ["colA", "colB", "colC"]\ndf[fill_cols] = df[fill_cols].fillna(0)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Transform data type: ",(0,i.jsx)(n.code,{children:"df = df.astype(int)"})]}),"\n",(0,i.jsx)(n.p,{children:"string replacemnts:\nex."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'pd.to_numeric(df["A"], errors="coerce")'})}),"\n",(0,i.jsxs)(n.li,{children:["remove comma and trailing spaces: ",(0,i.jsx)(n.code,{children:'df["A"] = df["A"].astype(str).str.replace(",","").str.strip()'})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var d=s(6540);const i={},o=d.createContext(i);function l(e){const n=d.useContext(o);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),d.createElement(o.Provider,{value:n},e.children)}},8887:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/pd_concat-068debb77dbd68021c72a88acddf9a15.png"},9810:(e,n,s)=>{s.d(n,{A:()=>d});const d=s.p+"assets/images/df_drop-c0baa66a11bb330703b11d3778b41273.png"}}]);