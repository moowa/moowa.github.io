"use strict";(self.webpackChunkknowtes=self.webpackChunkknowtes||[]).push([[4172],{5680:(e,r,t)=>{t.d(r,{xA:()=>p,yg:()=>g});var n=t(6540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),d=a,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return t?n.createElement(g,i(i({ref:r},p),{},{components:t})):n.createElement(g,i({ref:r},p))}));function g(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1635:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(8168),a=(t(6540),t(5680));const o={tags:["developer tools","azure","powershell"],sidebar_class_name:"hidden"},i="Azure PowerShell",l={unversionedId:"knowtes/azure_powershell",id:"knowtes/azure_powershell",title:"Azure PowerShell",description:"- cmdlets to work with Azure features in PowerShell",source:"@site/docs/knowtes/azure_powershell.md",sourceDirName:"knowtes",slug:"/knowtes/azure_powershell",permalink:"/docs/knowtes/azure_powershell",draft:!1,tags:[{label:"developer tools",permalink:"/docs/tags/developer-tools"},{label:"azure",permalink:"/docs/tags/azure"},{label:"powershell",permalink:"/docs/tags/powershell"}],version:"current",frontMatter:{tags:["developer tools","azure","powershell"],sidebar_class_name:"hidden"},sidebar:"tutorialSidebar",previous:{title:"Alembic",permalink:"/docs/knowtes/alembic"},next:{title:"Conda",permalink:"/docs/knowtes/conda"}},s={},u=[{value:"Basic commands",id:"basic-commands",level:2},{value:"PowerShell Scripts",id:"powershell-scripts",level:2}],p={toc:u},c="wrapper";function m(e){let{components:r,...t}=e;return(0,a.yg)(c,(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"azure-powershell"},"Azure PowerShell"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"cmdlets to work with Azure features in PowerShell"),(0,a.yg)("li",{parentName:"ul"},"installation and other commands ",(0,a.yg)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/training/modules/automate-azure-tasks-with-powershell/5-create-resource-interactively?pivots=windows"},"here"),"\u2197\ufe0f")),(0,a.yg)("h2",{id:"basic-commands"},"Basic commands"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Connect-AzAccount")," - prompts for Azure credentials then connects to your Azure subscription"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzContext")," - used to determine currently active subscription"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzSubscription")," - returns list of all subscription names in your account"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Set-AzContext -Subscription <Subscription ID>")," - change active subscription to given Subscription ID"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzResourceGroup")," - returns list of all Resource Groups in the active subscription; optionally, do ",(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzResourceGroup | Format-Table")," for a more concise view"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"New-AzResourceGroup -Name <name> -Location <location>")," - create a new resource group"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzResource")," - returns list of your Azure resources"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"New-AzVM -ResourceGroupName <resource group name> -Name <machine name> -Credential <credentials object> -Location <location> -Image <image name>")," - create a new virtual machine"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Remove-AzVM")," - delete an Azure virtual machine"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Start-AzVM")," - starts a stopped VM"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Stop-AzVM")," - stops a running VM"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Restart-AzVM")," - restarts a VM"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Update-AzVM")," - updates the configuration for a VM"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"Get-AzVM -Status")," - returns list of VMs in active subscription"),(0,a.yg)("li",{parentName:"ul"},"Example VM Creation: ")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'New-AzVM -ResourceGroupName <resource group name> -Name "testvm-auseast-01" -Location "australiasoutheast" -Image "Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest" -Credential (Get-Credential) -OpenPorts 22 -PublicIpAddressName "testvmip-auseast-01"\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Create variable for easier reference: ",(0,a.yg)("inlineCode",{parentName:"li"},"$vm = (Get-AzVM -Name <vm name> -ResourceGroupName <resource group name>)")),(0,a.yg)("li",{parentName:"ul"},"To cleanup, after deleting VM, delete network interface, managed OS disks, virtual network, network security group and public IP address:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-pwsh"},"$vm | Remove-AzNetworkInterface \u2013Force\nGet-AzDisk -ResourceGroupName $vm.ResourceGroupName -DiskName $vm.StorageProfile.OSDisk.Name | Remove-AzDisk -Force\nGet-AzVirtualNetwork -ResourceGroupName $vm.ResourceGroupName | Remove-AzVirtualNetwork -Force\nGet-AzNetworkSecurityGroup -ResourceGroupName $vm.ResourceGroupName | Remove-AzNetworkSecurityGroup -Force\nGet-AzPublicIpAddress -ResourceGroupName $vm.ResourceGroupName | Remove-AzPublicIpAddress -Force\n")),(0,a.yg)("h2",{id:"powershell-scripts"},"PowerShell Scripts"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/training/modules/automate-azure-tasks-with-powershell/7-create-resource-using-script"},"reference"),"\u2197\ufe0f"),(0,a.yg)("li",{parentName:"ul"},"file extension .ps1"),(0,a.yg)("li",{parentName:"ul"},"execute scripts in command line using: ",(0,a.yg)("inlineCode",{parentName:"li"},".\\myScript.ps1")),(0,a.yg)("li",{parentName:"ul"},"declare a variable using ",(0,a.yg)("inlineCode",{parentName:"li"},"$")," and assign a value using ",(0,a.yg)("inlineCode",{parentName:"li"},"="),". For example ",(0,a.yg)("inlineCode",{parentName:"li"},'$loc = "East US"')," You may also use variables to hold objects returned by cmdlets. For example, ",(0,a.yg)("inlineCode",{parentName:"li"},"$adminCredential = Get-Credential")," To get the value stored in a variable, use ",(0,a.yg)("inlineCode",{parentName:"li"},"$")," and its name."),(0,a.yg)("li",{parentName:"ul"},"use parameters by passing arguments on the command line. For example, in the command line, call ",(0,a.yg)("inlineCode",{parentName:"li"},'.\\setupEnvironment.ps1 -size 5 -location "East US"')," and inside the script, get the parameter values through variables ",(0,a.yg)("inlineCode",{parentName:"li"},"param([string]$location, [int]$size)"),"."),(0,a.yg)("li",{parentName:"ul"},"Example script:")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-pwsh",metastring:'title="setupEnvironment.ps1"',title:'"setupEnvironment.ps1"'},'param([string]$resourceGroup)\n\n$adminCredential = Get-Credential -Message "Enter a username and password for the VM administrator."\n\nFor ($i = 1; $i -le 3; $i++)\n{\n    $vmName = "ConferenceDemo" + $i\n    Write-Host "Creating VM: " $vmName\n    New-AzVm -ResourceGroupName $resourceGroup -Name $vmName -Credential $adminCredential -Image Canonical:0001-com-ubuntu-server-focal:20_04-lts:latest\n}\n')),(0,a.yg)("p",null,"Then run using ",(0,a.yg)("inlineCode",{parentName:"p"},"./ConferenceDailyReset.ps1 <resource group name>")))}m.isMDXComponent=!0}}]);